name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint --if-present
      - name: Run type checking
        run: npx tsc --noEmit
      - name: Run tests
        run: npm test
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results.log
            reports/
            coverage/

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build TypeScript
        run: npm run build
      - name: Bundle with pkg
        run: npm run bundle
      - name: Archive binaries
        uses: actions/upload-artifact@v4
        with:
          name: runix-binaries
          path: |
            runix-win.exe
            runix-linux
            runix-macos
  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: runix-binaries
          path: ./dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload runix-win.exe
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/runix-win.exe
          asset_name: runix-win.exe
          asset_content_type: application/octet-stream
      - name: Upload runix-linux
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/runix-linux
          asset_name: runix-linux
          asset_content_type: application/octet-stream
      - name: Upload runix-macos
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/runix-macos
          asset_name: runix-macos
          asset_content_type: application/octet-stream
  security:
    name: Security & Quality
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run security audit
        run: npm audit --audit-level=high
      - name: Check for outdated packages
        run: npm outdated || true
      - name: Check package vulnerabilities
        run: npx audit-ci --config ./audit-ci.json || true
