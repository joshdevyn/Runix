#!/bin/bash
# Runix execution wrapper script for Unix systems

# Determine script location
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
export NODE_ENV=production

# Check for Node.js
if ! command -v node &> /dev/null; then
  echo "Error: Node.js is required but was not found in PATH"
  exit 1
fi

# Check which platform executable to use based on OS
PLATFORM=""
if [[ "$OSTYPE" == "darwin"* ]]; then
  PLATFORM="macos-x64"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
  PLATFORM="linux-x64"
else
  echo "Unknown platform: $OSTYPE"
  exit 1
fi

# Check if the executable exists
if [[ -f "$SCRIPT_DIR/runix/runix-$PLATFORM" ]]; then
  # Make sure it's executable
  chmod +x "$SCRIPT_DIR/runix/runix-$PLATFORM"
  # Execute the runix executable with all arguments passed through
  "$SCRIPT_DIR/runix/runix-$PLATFORM" "$@"
else
  # Fallback to using Node.js directly if executable not found
  echo "Warning: Executable not found, using Node.js directly..."
  node "$SCRIPT_DIR/../dist/index.js" "$@"
fi

# Pass through the exit code
exit $?
